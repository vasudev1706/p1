# -*- coding: utf-8 -*-
"""app6

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1R2dRbTUTF5MrYbPEkJY3j910jT0NS_ar
"""

pip install streamlit

import pandas as pd
import streamlit as st
from xgboost import XGBRegressor
from pickle import dump
from pickle import load
import pickle

loaded_model = pickle.load(open("Bigmart_Project.sav","rb"))

data_train = pd.read_csv("Train.csv")

# Label encoding
from sklearn.preprocessing import OneHotEncoder
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
Label = ['Item_Fat_Content', 'Outlet_Size', 'Outlet_Location_Type',"Item_Fat_Content","Item_Identifier","Outlet_Identifier","Item_Type","Outlet_Type"]

for i in Label:
        data_train[i] = le.fit_transform(data_train[i])

#spliting into training and testing data
from sklearn.model_selection import train_test_split
y = data_train['Item_Outlet_Sales']
x = data_train.drop('Item_Outlet_Sales', axis = 1)
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.8, random_state = 0)

from sklearn.preprocessing import StandardScaler
sc= StandardScaler()
x_train_std= sc.fit_transform(x_train)
x_test_std= sc.transform(x_test)

loaded_model.fit(x_train_std,y_train)

y_pred_xgb=loaded_model.predict(x_test_std)
print(y_pred_xgb)

def main():
    #title
    st.title('BigMart Sales predicition')

item_weight= st.text_input('item_weight')
item_fat_content=st.text_input('item_fat_content')
item_visibility= st.text_input('item_visibility')
item_type= st.text_input('item_type')
item_mrp = st.text_input('item_mrp')
outlet_establishment_year= st.text_input('outlet_establishment_year')
outlet_size= st.text_input('outlet_size')
outlet_location_type= st.text_input('outlet_location_type')
outlet_type= st.text_input('outlet_type')
Predicition = ' '

if st.button('Predict'):
        Predicition = Bigmart_Prediction([item_weight,item_fat_content,item_visibility,item_type,item_mrp,outlet_establishment_year,outlet_size,outlet_location_type,outlet_type])

st.success(Predicition)

if __name__ == "__main__":
    main()

